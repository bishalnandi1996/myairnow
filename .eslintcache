[{"/home/BISHAL/Documents/react-tutorial/myairnow/src/index.js":"1","/home/BISHAL/Documents/react-tutorial/myairnow/src/App.js":"2","/home/BISHAL/Documents/react-tutorial/myairnow/src/reportWebVitals.js":"3","/home/BISHAL/Documents/react-tutorial/myairnow/src/components/StatesComponent.js":"4","/home/BISHAL/Documents/react-tutorial/myairnow/src/components/StatesDataComponent.js":"5","/home/BISHAL/Documents/react-tutorial/myairnow/src/components/StatesCityComponent.js":"6","/home/BISHAL/Documents/react-tutorial/myairnow/src/components/CityDataComponent.js":"7"},{"size":595,"mtime":1611995161444,"results":"8","hashOfConfig":"9"},{"size":378,"mtime":1611995413753,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611043186419,"results":"11","hashOfConfig":"9"},{"size":2130,"mtime":1611997692913,"results":"12","hashOfConfig":"9"},{"size":4584,"mtime":1611998259994,"results":"13","hashOfConfig":"9"},{"size":2049,"mtime":1611997576701,"results":"14","hashOfConfig":"9"},{"size":4203,"mtime":1611998527219,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"s9xmlz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/BISHAL/Documents/react-tutorial/myairnow/src/index.js",[],["34","35"],"/home/BISHAL/Documents/react-tutorial/myairnow/src/App.js",["36","37"],"import React from 'react';\nimport StatesComponent from './components/StatesComponent';\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass App extends React.Component {  \n  render() {\n    return(\n      <StatesComponent />\n      //<FontAwesomeIcon icon={faHome} />\n    );\n  }\n}\n\nexport default App;","/home/BISHAL/Documents/react-tutorial/myairnow/src/reportWebVitals.js",[],"/home/BISHAL/Documents/react-tutorial/myairnow/src/components/StatesComponent.js",["38"],"import React from 'react';\nimport States from '../states/States.json';\nimport StatesDataComponent from './StatesDataComponent';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearchLocation } from \"@fortawesome/free-solid-svg-icons\";\n\nclass StatesComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showStatesDataComponent: false,\n            singleState: null\n        };\n        this.showComponent = this.showComponent.bind(this);\n    }\n\n    showComponent(singleStateName) {\n        this.setState({\n            showStatesDataComponent: true,\n            singleState: singleStateName.split(' ').join('_')\n        });\n        document.getElementById(\"StateListButton\").innerHTML = singleStateName;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"row\">\n                        <div className=\"dropdown\">\n                            <button type=\"button\" className=\"btn btn-info dropdown-toggle\" id=\"StateListButton\" data-toggle=\"dropdown\">\n                            <FontAwesomeIcon icon={faSearchLocation} /> Select State\n                            </button>\n                            <div className=\"dropdown-menu\" style={{maxHeight: \"200px\", overflowY: \"auto\"}}>\n                                {States.map((singleState) => (\n                                    <a className=\"dropdown-item\" onClick={() => this.showComponent(singleState.name)} key={singleState.key}> {singleState.name} </a>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\" style={{ marginTop: \"10px\" }}>\n                    {this.state.showStatesDataComponent ?\n                        <StatesDataComponent key={this.state.singleState} value={this.state.singleState} /> :\n                        null\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StatesComponent;","/home/BISHAL/Documents/react-tutorial/myairnow/src/components/StatesDataComponent.js",[],"/home/BISHAL/Documents/react-tutorial/myairnow/src/components/StatesCityComponent.js",["39"],"import React from 'react';\nimport CityDataComponent from './CityDataComponent';\nimport Cities from '../states/StatesCity.json';\n\nclass StatesCityComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showCityDataComponent: false,\n            singleState: null,\n            singleCity: null,\n        };\n        this.showComponent = this.showComponent.bind(this);\n    }\n\n    showComponent(city, SingleState) {\n        this.setState({\n            showCityDataComponent: true,\n            singleState: SingleState,\n            singleCity: city.split(' ').join('_')\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"row\" style={{ marginBottom: \"10px\" }}>\n                    <div className=\"dropdown\">\n                        <button type=\"button\" className=\"btn btn-warning dropdown-toggle\" id=\"StateListButton\" data-toggle=\"dropdown\">\n                            Select City\n                        </button>\n                        <div className=\"dropdown-menu\" style={{maxHeight: \"200px\", overflowY: \"auto\"}}>\n                            {Cities[this.props.value].map((City) => (\n                                <a className=\"dropdown-item\" onClick={() => this.showComponent(City, this.props.value)} key={City}> {City} </a>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.showCityDataComponent ?\n                        <CityDataComponent key={this.state.singleCity} StateName={this.state.singleState} CityName={this.state.singleCity} hideStateData={this.props.hideStateData} /> :\n                        null\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StatesCityComponent;","/home/BISHAL/Documents/react-tutorial/myairnow/src/components/CityDataComponent.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":10,"nodeType":"46","messageId":"47","endLine":3,"endColumn":16},{"ruleId":"44","severity":1,"message":"48","line":4,"column":10,"nodeType":"46","messageId":"47","endLine":4,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":36,"column":37,"nodeType":"51","endLine":36,"endColumn":141},{"ruleId":"49","severity":1,"message":"50","line":34,"column":33,"nodeType":"51","endLine":34,"endColumn":132},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'faHome' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]